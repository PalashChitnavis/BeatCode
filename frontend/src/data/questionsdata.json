[
        {
                "id": 1,
                "title": "Sum of Array Elements",
                "description": "Write a function to find the sum of all elements in an array.",
                "diff": "easy",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[1, 2, 3]",
                                "output": "6",
                                "explanation": "Sum of [1, 2, 3] is 6."
                        },
                        {
                                "input": "[5, 5, 5]",
                                "output": "15",
                                "explanation": "Sum of [5, 5, 5] is 15."
                        },
                        {
                                "input": "[10, -2, 8]",
                                "output": "16",
                                "explanation": "Sum of [10, -2, 8] is 16."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint sum(int arr[], int n) {\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint sum(int arr[], int n) {\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}",
                        "java": "public class Main {\n    public static int sum(int[] arr) {\n        int sum = 0;\n        for (int num : arr) {\n            sum += num;\n        }\n        return sum;\n    }\n}",
                        "javascript": "function sum(arr) {\n    return arr.reduce((acc, curr) => acc + curr, 0);\n}",
                        "python": "def sum(arr):\n    return sum(arr)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint sum(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint sum(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int sum(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",
                        "javascript": "function sum(arr) {\n    // Parameters: arr (array of numbers)\n    // Write your code here\n}",
                        "python": "def sum(arr):\n    # Parameters: arr (list of numbers)\n    # Write your code here\n}"
                }
        },
        {
                "id": 2,
                "title": "Find Maximum Element in Array",
                "description": "Write a function to find the maximum element in an array.",
                "diff": "easy",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[1, 5, 3]",
                                "output": "5",
                                "explanation": "Maximum element in [1, 5, 3] is 5."
                        },
                        {
                                "input": "[10, 2, 8]",
                                "output": "10",
                                "explanation": "Maximum element in [10, 2, 8] is 10."
                        },
                        {
                                "input": "[-1, -5, -3]",
                                "output": "-1",
                                "explanation": "Maximum element in [-1, -5, -3] is -1."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint maxElement(int arr[], int n) {\n    int max = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint maxElement(int arr[], int n) {\n    int max = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}",
                        "java": "public class Main {\n    public static int maxElement(int[] arr) {\n        int max = arr[0];\n        for (int num : arr) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n}",
                        "javascript": "function maxElement(arr) {\n    return Math.max(...arr);\n}",
                        "python": "def maxElement(arr):\n    return max(arr)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint maxElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint maxElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int maxElement(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",
                        "javascript": "function maxElement(arr) {\n    // Parameters: arr (array of numbers)\n    // Write your code here\n}",
                        "python": "def maxElement(arr):\n    # Parameters: arr (list of numbers)\n    # Write your code here\n}"
                }
        },
        {
                "id": 3,
                "title": "Find Minimum Element in Array",
                "description": "Write a function to find the minimum element in an array.",
                "diff": "easy",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[1, 5, 3]",
                                "output": "1",
                                "explanation": "Minimum element in [1, 5, 3] is 1."
                        },
                        {
                                "input": "[10, 2, 8]",
                                "output": "2",
                                "explanation": "Minimum element in [10, 2, 8] is 2."
                        },
                        {
                                "input": "[-1, -5, -3]",
                                "output": "-5",
                                "explanation": "Minimum element in [-1, -5, -3] is -5."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint minElement(int arr[], int n) {\n    int min = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return min;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint minElement(int arr[], int n) {\n    int min = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return min;\n}",
                        "java": "public class Main {\n    public static int minElement(int[] arr) {\n        int min = arr[0];\n        for (int num : arr) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        return min;\n    }\n}",
                        "javascript": "function minElement(arr) {\n    return Math.min(...arr);\n}",
                        "python": "def minElement(arr):\n    return min(arr)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint minElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint minElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int minElement(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",
                        "javascript": "function minElement(arr) {\n    // Parameters: arr (array of numbers)\n    // Write your code here\n}",
                        "python": "def minElement(arr):\n    # Parameters: arr (list of numbers)\n    # Write your code here\n}"
                }
        },
        {
                "id": 4,
                "title": "Check if Array is Empty",
                "description": "Write a function to check if an array is empty.",
                "diff": "easy",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[]",
                                "output": "true",
                                "explanation": "Array [] is empty."
                        },
                        {
                                "input": "[1, 2, 3]",
                                "output": "false",
                                "explanation": "Array [1, 2, 3] is not empty."
                        },
                        {
                                "input": "[\"a\", \"b\", \"c\"]",
                                "output": "false",
                                "explanation": "Array ['a', 'b', 'c'] is not empty."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\n#include <stdbool.h>\nbool isEmpty(int arr[], int n) {\n    return n == 0;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nbool isEmpty(int arr[], int n) {\n    return n == 0;\n}",
                        "java": "public class Main {\n    public static boolean isEmpty(int[] arr) {\n        return arr.length == 0;\n    }\n}",
                        "javascript": "function isEmpty(arr) {\n    return arr.length === 0;\n}",
                        "python": "def isEmpty(arr):\n    return len(arr) == 0"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\n#include <stdbool.h>\nbool isEmpty(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nbool isEmpty(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static boolean isEmpty(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",
                        "javascript": "function isEmpty(arr) {\n    // Parameters: arr (array)\n    // Write your code here\n}",
                        "python": "def isEmpty(arr):\n    # Parameters: arr (list)\n    # Write your code here\n}"
                }
        },
        {
                "id": 5,
                "title": "Count Occurrences of Element in Array",
                "description": "Write a function to count the occurrences of a given element in an array.",
                "diff": "easy",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[1, 2, 3, 1]  1",
                                "output": "2",
                                "explanation": "Element 1 occurs twice in [1, 2, 3, 1]."
                        },
                        {
                                "input": "[1, 2, 3]  4",
                                "output": "0",
                                "explanation": "Element 4 does not occur in [1, 2, 3]."
                        },
                        {
                                "input": "[]  5",
                                "output": "0",
                                "explanation": "Array is empty, so element 5 does not occur."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint countOccurrences(int arr[], int n, int x) {\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint countOccurrences(int arr[], int n, int x) {\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}",
                        "java": "public class Main {\n    public static int countOccurrences(int[] arr, int x) {\n        int count = 0;\n        for (int num : arr) {\n            if (num == x) {\n                count++;\n            }\n        }\n        return count;\n    }\n}",
                        "javascript": "function countOccurrences(arr, x) {\n    return arr.filter(num => num === x).length;\n}",
                        "python": "def countOccurrences(arr, x):\n    return arr.count(x)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint countOccurrences(int arr[], int n, int x) {\n    // Parameters: arr (array of integers), n (number of elements), x (element to count)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint countOccurrences(int arr[], int n, int x) {\n    // Parameters: arr (array of integers), n (number of elements), x (element to count)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int countOccurrences(int[] arr, int x) {\n        // Parameters: arr (array of integers), x (element to count)\n        // Write your code here\n    }\n}",
                        "javascript": "function countOccurrences(arr, x) {\n    // Parameters: arr (array), x (element to count)\n    // Write your code here\n}",
                        "python": "def countOccurrences(arr, x):\n    # Parameters: arr (list), x (element to count)\n    # Write your code here\n}"
                }
        }
]

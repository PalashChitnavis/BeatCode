[
        {
                "id": 1,
                "title": "Sum of Array Elements",
                "description": "Write a function to find the sum of all elements in an array.",
                "diff": "easy",
                "example_cases": [
                        {
                                "input": "[1, 2, 3]",
                                "output": "6",
                                "explanation": "Sum of [1, 2, 3] is 6."
                        },
                        {
                                "input": "[5, 5, 5]",
                                "output": "15",
                                "explanation": "Sum of [5, 5, 5] is 15."
                        },
                        {
                                "input": "[10, -2, 8]",
                                "output": "16",
                                "explanation": "Sum of [10, -2, 8] is 16."
                        }
                ],
                "solution": {
                        "c": "int sum(int arr[], int n) {\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n        }\n        return sum;\n    }",
                        "cpp": "class Solution {\npublic:\n    int sum(int arr[], int n) {\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n        }\n        return sum;\n    }\n};",
                        "java": "class Solution {\n    public int sum(int[] arr) {\n        int sum = 0;\n        for (int num : arr) {\n            sum += num;\n        }\n        return sum;\n    }\n}",
                        "python": "class Solution:\n    def sum(self, arr):\n        return sum(arr)"
                },
                "boilerplate": {
                        "c": "int sum(int arr[], int n) {\n        // Parameters: arr (array of integers), n (number of elements)\n        // Write your code here\n    }\n",
                        "cpp": "class Solution {\npublic:\n    int sum(int arr[], int n) {\n        // Parameters: arr (array of integers), n (number of elements)\n        // Write your code here\n    }\n};",
                        "java": "class Solution {\n    public int sum(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",
                        "python": "class Solution:\n    def sum(self, arr):\n        # Parameters: arr (list of numbers)\n        # Write your code here\n"
                },
                "templatecode": {
                        "c": "int main() {\n\t// Initialize test cases\n\tint arr1[] = {1, 2, 3};\n\tint arr2[] = {5, 5, 5};\n\tint arr3[] = {10, -2, 8};\n\n\t// Create solution object\n\tSolution sol;\n\n\t// Initialize flag to track test case status\n\tint allPassed = 1;\n\n\t// Run test cases\n\tprintf(\"Test case 1: [1, 2, 3] => \");\n\tint output1 = sol.sum(arr1, sizeof(arr1) / sizeof(arr1[0]));\n\tif (output1 == 6) {\n\t\tprintf(\"%d - Passed\\n\", output1);\n\t} else {\n\t\tprintf(\"%d - Failed\\n\", output1);\n\t\tallPassed = 0;\n\t}\n\n\tprintf(\"Test case 2: [5, 5, 5] => \");\n\tint output2 = sol.sum(arr2, sizeof(arr2) / sizeof(arr2[0]));\n\tif (output2 == 15) {\n\t\tprintf(\"%d - Passed\\n\", output2);\n\t} else {\n\t\tprintf(\"%d - Failed\\n\", output2);\n\t\tallPassed = 0;\n\t}\n\n\tprintf(\"Test case 3: [10, -2, 8] => \");\n\tint output3 = sol.sum(arr3, sizeof(arr3) / sizeof(arr3[0]));\n\tif (output3 == 16) {\n\t\tprintf(\"%d - Passed\\n\", output3);\n\t} else {\n\t\tprintf(\"%d - Failed\\n\", output3);\n\t\tallPassed = 0;\n\t}\n\n\t// Display final message\n\tif (allPassed) {\n\t\tprintf(\"Congratulations! You've successfully solved the question.\\n\");\n\t} else {\n\t\tprintf(\"Please try again.\\n\");\n\t}\n\n\treturn 0;\n}",
                        "cpp": "int main() {\n\t// Initialize test cases\n\tint arr1[] = {1, 2, 3};\n\tint arr2[] = {5, 5, 5};\n\tint arr3[] = {10, -2, 8};\n\n\t// Create solution object\n\tSolution sol;\n\n\t// Initialize flag to track test case status\n\tbool allPassed = true;\n\n\t// Run test cases\n\tcout << \"Test case 1: [1, 2, 3] => \";\n\tint output1 = sol.sum(arr1, sizeof(arr1) / sizeof(arr1[0]));\n\tif (output1 == 6) {\n\t\tcout << output1 << \" - Passed\" << endl;\n\t} else {\n\t\tcout << output1 << \" - Failed\" << endl;\n\t\tallPassed = false;\n\t}\n\n\tcout << \"Test case 2: [5, 5, 5] => \";\n\tint output2 = sol.sum(arr2, sizeof(arr2) / sizeof(arr2[0]));\n\tif (output2 == 15) {\n\t\tcout << output2 << \" - Passed\" << endl;\n\t} else {\n\t\tcout << output2 << \" - Failed\" << endl;\n\t\tallPassed = false;\n\t}\n\n\tcout << \"Test case 3: [10, -2, 8] => \";\n\tint output3 = sol.sum(arr3, sizeof(arr3) / sizeof(arr3[0]));\n\tif (output3 == 16) {\n\t\tcout << output3 << \" - Passed\" << endl;\n\t} else {\n\t\tcout << output3 << \" - Failed\" << endl;\n\t\tallPassed = false;\n\t}\n\n\t// Display final message\n\tif (allPassed) {\n\t\tcout << \"Congratulations! You've successfully solved the question.\" << endl;\n\t} else {\n\t\tcout << \"Please try again.\" << endl;\n\t}\n\n\treturn 0;\n}",
                        "java": "public class Main {\n\tpublic static void main(String[] args) {\n\t\t// Initialize test cases\n\t\tint[] arr1 = {1, 2, 3};\n\t\tint[] arr2 = {5, 5, 5};\n\t\tint[] arr3 = {10, -2, 8};\n\n\t\t// Create solution object\n\t\tSolution sol = new Solution();\n\n\t\t// Initialize flag to track test case status\n\t\tboolean allPassed = true;\n\n\t\t// Run test cases\n\t\tSystem.out.print(\"Test case 1: [1, 2, 3] => \");\n\t\tint output1 = sol.sum(arr1);\n\t\tif (output1 == 6) {\n\t\t\tSystem.out.println(output1 + \" - Passed\");\n\t\t} else {\n\t\t\tSystem.out.println(output1 + \" - Failed\");\n\t\t\tallPassed = false;\n\t\t}\n\n\t\tSystem.out.print(\"Test case 2: [5, 5, 5] => \");\n\t\tint output2 = sol.sum(arr2);\n\t\tif (output2 == 15) {\n\t\t\tSystem.out.println(output2 + \" - Passed\");\n\t\t} else {\n\t\t\tSystem.out.println(output2 + \" - Failed\");\n\t\t\tallPassed = false;\n\t\t}\n\n\t\tSystem.out.print(\"Test case 3: [10, -2, 8] => \");\n\t\tint output3 = sol.sum(arr3);\n\t\tif (output3 == 16) {\n\t\t\tSystem.out.println(output3 + \" - Passed\");\n\t\t} else {\n\t\t\tSystem.out.println(output3 + \" - Failed\");\n\t\t\tallPassed = false;\n\t\t}\n\n\t\t// Display final message\n\t\tif (allPassed) {\n\t\t\tSystem.out.println(\"Congratulations! You've successfully solved the question.\");\n\t\t} else {\n\t\t\tSystem.out.println(\"Please try again.\");\n\t\t}\n\t}\n}",
                        "python": "class Main:\n\t@staticmethod\n\tdef main():\n\t\t# Initialize test cases\n\t\tarr1 = [1, 2, 3]\n\t\tarr2 = [5, 5, 5]\n\t\tarr3 = [10, -2, 8]\n\n\t\t# Create solution object\n\t\tsol = Solution()\n\n\t\t# Initialize flag to track test case status\n\t\tall_passed = True\n\n\t\t# Run test cases\n\t\tprint(\"Test case 1: [1, 2, 3] => \", end=\"\")\n\t\toutput1 = sol.sum(arr1)\n\t\tif output1 == 6:\n\t\t\tprint(f\"{output1} - Passed\")\n\t\telse:\n\t\t\tprint(f\"{output1} - Failed\")\n\t\t\tall_passed = False\n\n\t\tprint(\"Test case 2: [5, 5, 5] => \", end=\"\")\n\t\toutput2 = sol.sum(arr2)\n\t\tif output2 == 15:\n\t\t\tprint(f\"{output2} - Passed\")\n\t\telse:\n\t\t\tprint(f\"{output2} - Failed\")\n\t\t\tall_passed = False\n\n\t\tprint(\"Test case 3: [10, -2, 8] => \", end=\"\")\n\t\toutput3 = sol.sum(arr3)\n\t\tif output3 == 16:\n\t\t\tprint(f\"{output3} - Passed\")\n\t\telse:\n\t\t\tprint(f\"{output3} - Failed\")\n\t\t\tall_passed = False\n\n\t\t# Display final message\n\t\tif all_passed:\n\t\t\tprint(\"Congratulations! You've successfully solved the question.\")\n\t\telse:\n\t\t\tprint(\"Please try again.\")\n\n\nif __name__ == '__main__':\n\tMain.main()"
                }
        },
        {
                "id": 2,
                "title": "Find Maximum Element in Array",
                "description": "Write a function to find the maximum element in an array.",
                "diff": "easy",
                "example_cases": [
                        {
                                "input": "[1, 5, 3]",
                                "output": "5",
                                "explanation": "Maximum element in [1, 5, 3] is 5."
                        },
                        {
                                "input": "[10, 2, 8]",
                                "output": "10",
                                "explanation": "Maximum element in [10, 2, 8] is 10."
                        },
                        {
                                "input": "[-1, -5, -3]",
                                "output": "-1",
                                "explanation": "Maximum element in [-1, -5, -3] is -1."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint maxElement(int arr[], int n) {\n    int max = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint maxElement(int arr[], int n) {\n    int max = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}",
                        "java": "public class Main {\n    public static int maxElement(int[] arr) {\n        int max = arr[0];\n        for (int num : arr) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n}",

                        "python": "def maxElement(arr):\n    return max(arr)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint maxElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint maxElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int maxElement(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",

                        "python": "def maxElement(arr):\n    # Parameters: arr (list of numbers)\n    # Write your code here\n}"
                }
        },
        {
                "id": 3,
                "title": "Find Minimum Element in Array",
                "description": "Write a function to find the minimum element in an array.",
                "category": "array",
                "example_cases": [
                        {
                                "input": "[1, 5, 3]",
                                "output": "1",
                                "explanation": "Minimum element in [1, 5, 3] is 1."
                        },
                        {
                                "input": "[10, 2, 8]",
                                "output": "2",
                                "explanation": "Minimum element in [10, 2, 8] is 2."
                        },
                        {
                                "input": "[-1, -5, -3]",
                                "output": "-5",
                                "explanation": "Minimum element in [-1, -5, -3] is -5."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint minElement(int arr[], int n) {\n    int min = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return min;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint minElement(int arr[], int n) {\n    int min = arr[0];\n    for (int i = 1; i < n; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    return min;\n}",
                        "java": "public class Main {\n    public static int minElement(int[] arr) {\n        int min = arr[0];\n        for (int num : arr) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        return min;\n    }\n}",

                        "python": "def minElement(arr):\n    return min(arr)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint minElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint minElement(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int minElement(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",

                        "python": "def minElement(arr):\n    # Parameters: arr (list of numbers)\n    # Write your code here\n}"
                }
        },
        {
                "id": 4,
                "title": "Check if Array is Empty",
                "description": "Write a function to check if an array is empty.",
                "diff": "easy",

                "example_cases": [
                        {
                                "input": "[]",
                                "output": "true",
                                "explanation": "Array [] is empty."
                        },
                        {
                                "input": "[1, 2, 3]",
                                "output": "false",
                                "explanation": "Array [1, 2, 3] is not empty."
                        },
                        {
                                "input": "[\"a\", \"b\", \"c\"]",
                                "output": "false",
                                "explanation": "Array ['a', 'b', 'c'] is not empty."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\n#include <stdbool.h>\nbool isEmpty(int arr[], int n) {\n    return n == 0;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nbool isEmpty(int arr[], int n) {\n    return n == 0;\n}",
                        "java": "public class Main {\n    public static boolean isEmpty(int[] arr) {\n        return arr.length == 0;\n    }\n}",

                        "python": "def isEmpty(arr):\n    return len(arr) == 0"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\n#include <stdbool.h>\nbool isEmpty(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nbool isEmpty(int arr[], int n) {\n    // Parameters: arr (array of integers), n (number of elements)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static boolean isEmpty(int[] arr) {\n        // Parameters: arr (array of integers)\n        // Write your code here\n    }\n}",

                        "python": "def isEmpty(arr):\n    # Parameters: arr (list)\n    # Write your code here\n}"
                }
        },
        {
                "id": 5,
                "title": "Count Occurrences of Element in Array",
                "description": "Write a function to count the occurrences of a given element in an array.",
                "diff": "easy",
                "example_cases": [
                        {
                                "input": "[1, 2, 3, 1]  1",
                                "output": "2",
                                "explanation": "Element 1 occurs twice in [1, 2, 3, 1]."
                        },
                        {
                                "input": "[1, 2, 3]  4",
                                "output": "0",
                                "explanation": "Element 4 does not occur in [1, 2, 3]."
                        },
                        {
                                "input": "[]  5",
                                "output": "0",
                                "explanation": "Array is empty, so element 5 does not occur."
                        }
                ],
                "solution": {
                        "c": "#include <stdio.h>\nint countOccurrences(int arr[], int n, int x) {\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint countOccurrences(int arr[], int n, int x) {\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}",
                        "java": "public class Main {\n    public static int countOccurrences(int[] arr, int x) {\n        int count = 0;\n        for (int num : arr) {\n            if (num == x) {\n                count++;\n            }\n        }\n        return count;\n    }\n}",
                        "python": "def countOccurrences(arr, x):\n    return arr.count(x)"
                },
                "boilerplate": {
                        "c": "#include <stdio.h>\nint countOccurrences(int arr[], int n, int x) {\n    // Parameters: arr (array of integers), n (number of elements), x (element to count)\n    // Write your code here\n}",
                        "cpp": "#include <iostream>\nusing namespace std;\nint countOccurrences(int arr[], int n, int x) {\n    // Parameters: arr (array of integers), n (number of elements), x (element to count)\n    // Write your code here\n}",
                        "java": "public class Main {\n    public static int countOccurrences(int[] arr, int x) {\n        // Parameters: arr (array of integers), x (element to count)\n        // Write your code here\n    }\n}",
                        "python": "def countOccurrences(arr, x):\n    # Parameters: arr (list), x (element to count)\n    # Write your code here\n}"
                }
        }
]
